---
import DashboardAdmin from "../../layouts/dashboard-admin.astro";
import { Button } from "../../components/ui/button";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
} from "../../components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "../../components/ui/table";
---

<DashboardAdmin>
  <div class="container p-6 mx-auto">
    <div class="flex items-center justify-between mb-6">
      <div>
        <h1 class="text-2xl font-bold">Konten</h1>
        <p class="mt-1 text-gray-500">Kelola artikel dan konten website</p>
      </div>
      <div class="flex gap-2">
        <a href="/dashboard/konten/create">
          <Button variant="default" className="bg-[#406386]">+ Tambah Konten</Button>
        </a>
      </div>
    </div>

    <Card>
      <CardHeader>
        <CardTitle>Daftar Konten</CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Judul</TableHead>
              <TableHead>Kategori</TableHead>
              <TableHead className="text-center">Status</TableHead>
              <TableHead className="text-center">Views</TableHead>
              <TableHead>Terakhir Update</TableHead>
              <TableHead className="text-center">Aksi</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody id="content-table-body">
            <TableRow>
              <TableCell colSpan={6} className="text-center">Loading...</TableCell>
            </TableRow>
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  </div>
</DashboardAdmin>

<script>
import { ContentService, type Content } from '../../lib/content-service';

function generateTableRow(content: Content): string {
  const statusClass = content.status === 'published' 
    ? 'text-green-700 bg-green-100' 
    : content.status === 'draft'
    ? 'text-yellow-700 bg-yellow-100'
    : 'text-gray-700 bg-gray-100';

  const statusText = {
    published: 'Published',
    draft: 'Draft',
    archived: 'Archived'
  }[content.status];

  const updatedDate = new Date(content.updated_at).toLocaleDateString('id-ID', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });

  return `
    <tr data-id="${content.id}">
      <td>
        <div class="font-medium">
          ${content.title}
          ${content.featured_image ? '<span class="ml-2 text-xs text-blue-600">ðŸ“·</span>' : ''}
        </div>
        <div class="text-xs text-gray-500">${content.slug}</div>
      </td>
      <td>${content.category}</td>
      <td class="text-center">
        <span class="px-2 py-1 text-xs ${statusClass} rounded-full">
          ${statusText}
        </span>
      </td>
      <td class="text-center">${content.view_count}</td>
      <td>${updatedDate}</td>
      <td>
        <div class="flex justify-center gap-1">
          <button 
            class="px-2 text-xs text-green-700 bg-green-100 rounded" 
            onclick="previewContent(${content.id})"
          >
            Preview
          </button>
          <button 
            class="px-2 text-xs text-blue-700 bg-blue-100 rounded" 
            onclick="editContent(${content.id})"
          >
            Edit
          </button>
          <button 
            class="px-2 text-xs text-red-700 bg-red-100 rounded delete-btn" 
            data-id="${content.id}"
          >
            Hapus
          </button>
        </div>
      </td>
    </tr>
  `;
}

declare global {
  interface Window {
    editContent: (id: number) => void;
    deleteContent: (id: number) => Promise<void>;
    previewContent: (id: number) => void;
  }
}

document.addEventListener('DOMContentLoaded', async () => {
  const tableBody = document.getElementById('content-table-body');
  if (!tableBody) return;

  try {
    const content = await ContentService.getAllContent();
    
    if (content.length === 0) {
      tableBody.innerHTML = `
        <tr>
          <td colspan="6" class="text-center text-gray-500 py-4">
            Belum ada konten. Klik tombol "Tambah Konten" untuk membuat konten baru.
          </td>
        </tr>
      `;
      return;
    }

    tableBody.innerHTML = content.map(generateTableRow).join('');

    // Add event listeners for delete buttons
    document.querySelectorAll('.delete-btn').forEach((button: Element) => {
      if (button instanceof HTMLButtonElement) {
        button.addEventListener('click', async () => {
          const id = Number(button.dataset.id);
          if (!id || !confirm('Are you sure you want to delete this content?')) return;
          
          try {
            await ContentService.deleteContent(id);
            const row = button.closest('tr');
            if (row) row.remove();

            if (tableBody.children.length === 0) {
              tableBody.innerHTML = `
                <tr>
                  <td colspan="6" class="text-center text-gray-500 py-4">
                    Belum ada konten. Klik tombol "Tambah Konten" untuk membuat konten baru.
                  </td>
                </tr>
              `;
            }
          } catch (error) {
            console.error('Failed to delete content:', error);
            alert('Failed to delete content. Please try again.');
          }
        });
      }
    });
  } catch (error) {
    console.error('Failed to load content:', error);
    tableBody.innerHTML = `
      <tr>
        <td colspan="6" class="text-center text-red-500 py-4">
          Failed to load content. Please try refreshing the page.
        </td>
      </tr>
    `;
  }
});

// Handle edit content - redirect to edit page
window.editContent = (id: number): void => {
  window.location.href = `/dashboard/konten/${id}/edit`;
};

// Handle preview content - open in new tab
window.previewContent = (id: number): void => {
  window.open(`/artikel/${id}`, '_blank');
};
</script>
