---
import DashboardAdmin from "../../../layouts/dashboard-admin.astro";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
---

<DashboardAdmin>
  <div class="p-6 space-y-6">
    <div class="flex items-center justify-between">
      <h1 class="text-2xl font-bold">Edit Konten</h1>
      <a href="/dashboard/content">
        <Button variant="outline">Kembali</Button>
      </a>
    </div>

    <Card>
      <CardHeader>
        <CardTitle>Form Edit Konten</CardTitle>
      </CardHeader>
      <CardContent>
        <form id="contentEditForm" class="space-y-6">
          <input type="hidden" id="content_id" name="id" />

          <div class="grid gap-6 md:grid-cols-2">
            <div class="space-y-2">
              <Label for="title">Judul</Label>
              <Input id="title" name="title" required />
            </div>

            <div class="space-y-2">
              <Label for="slug">Slug URL</Label>
              <Input id="slug" name="slug" />
            </div>
          </div>

          <div class="grid gap-6 md:grid-cols-2">
            <div class="space-y-2">
              <Label for="category">Kategori</Label>
              <select id="category" name="category" class="flex w-full h-10 px-3 py-2 text-sm border rounded-md border-input bg-background">
                <option value="artikel">Artikel</option>
                <option value="berita">Berita</option>
                <option value="pengumuman">Pengumuman</option>
                <option value="feature">Feature</option>
              </select>
            </div>

            <div class="space-y-2">
              <Label for="status">Status</Label>
              <select id="status" name="status" class="flex w-full h-10 px-3 py-2 text-sm border rounded-md border-input bg-background">
                <option value="published">Published</option>
                <option value="draft">Draft</option>
                <option value="archived">Archived</option>
              </select>
            </div>
          </div>

          <!-- Current image preview -->
          <div class="space-y-2" id="currentImageContainer" style="display:none;">
            <Label>Current Image</Label>
            <div class="relative w-full h-40 overflow-hidden bg-gray-100 rounded-md">
              <img id="currentImage" src="" alt="Featured image" class="object-cover w-full h-full" />
            </div>
          </div>

          <div class="space-y-2">
            <Label for="featured_image">Change Featured Image</Label>
            <Input id="featured_image" name="featured_image" type="file" accept="image/*" />
          </div>

          <div class="space-y-2">
            <Label for="content">Konten</Label>
            <div id="editorContainer">
              <textarea id="content" name="content" rows="10" class="flex w-full px-3 py-2 text-sm bg-transparent border rounded-md shadow-sm min-h-20 border-input placeholder:text-muted-foreground"></textarea>
            </div>
          </div>

          <div class="pt-4 border-t">
            <h3 class="mb-4 text-base font-medium">SEO Settings</h3>
            <div class="grid gap-6 md:grid-cols-2">
              <div class="space-y-2">
                <Label for="seo_title">SEO Title</Label>
                <Input id="seo_title" name="seo_title" />
              </div>

              <div class="space-y-2">
                <Label for="seo_keywords">SEO Keywords</Label>
                <Input id="seo_keywords" name="seo_keywords" />
              </div>
            </div>

            <div class="mt-4 space-y-2">
              <Label for="seo_description">SEO Description</Label>
              <Textarea
                id="seo_description"
                name="seo_description"
                rows={3}
              />
            </div>
          </div>

          <!-- Additional stats -->
          <div class="pt-4 text-sm text-gray-500 border-t">
            <p id="viewCount">Views: -</p>
            <p id="createdDate">Created: -</p>
            <p id="updatedDate">Last updated: -</p>
          </div>

          <div class="flex justify-end space-x-4">
            <a href="/dashboard/content">
              <Button type="button" variant="outline">Cancel</Button>
            </a>
            <Button type="submit" className="bg-[#406386]">Update Content</Button>
          </div>
        </form>
      </CardContent>
    </Card>
  </div>
</DashboardAdmin>

<script>
  import { ContentService } from '../../../lib/content-service';
  
  // Get content ID from URL
  const pathname = window.location.pathname;
  const segments = pathname.split('/');
  const contentId = parseInt(segments[segments.length - 2]);
  
  // Format date helper
  function formatDate(dateString) {
    if (!dateString) return '-';
    const date = new Date(dateString);
    return new Intl.DateTimeFormat('id-ID', { 
      day: '2-digit', month: 'long', year: 'numeric', 
      hour: '2-digit', minute: '2-digit'
    }).format(date);
  }
  
  // Load content data
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      if (!contentId || isNaN(contentId)) {
        alert('Invalid content ID');
        window.location.href = '/dashboard/content';
        return;
      }
      
      const content = await ContentService.getContentById(contentId);
      
      if (!content) {
        alert('Content not found');
        window.location.href = '/dashboard/content';
        return;
      }
      
      // Populate form fields
      document.getElementById('content_id').value = content.id;
      document.getElementById('title').value = content.title;
      document.getElementById('slug').value = content.slug;
      document.getElementById('category').value = content.category;
      document.getElementById('status').value = content.status;
      document.getElementById('content').value = content.content;
      document.getElementById('seo_title').value = content.seo_title || '';
      document.getElementById('seo_keywords').value = content.seo_keywords || '';
      document.getElementById('seo_description').value = content.seo_description || '';
      
      // Display stats
      document.getElementById('viewCount').textContent = `Views: ${content.view_count || 0}`;
      document.getElementById('createdDate').textContent = `Created: ${formatDate(content.created_at)}`;
      document.getElementById('updatedDate').textContent = `Last updated: ${formatDate(content.updated_at)}`;
      
      // Display current image if exists
      if (content.featured_image) {
        document.getElementById('currentImageContainer').style.display = 'block';
        document.getElementById('currentImage').src = content.featured_image;
      }
    } catch (error) {
      console.error('Failed to load content:', error);
      alert('Failed to load content data. Please try again later.');
    }
  });
  
  // Form submission
  document.getElementById('contentEditForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    try {
      const formData = new FormData(e.target as HTMLFormElement);
      
      // If no new file is selected, remove the file input to prevent overriding
      const fileInput = document.getElementById('featured_image') as HTMLInputElement;
      if (fileInput && fileInput.files && fileInput.files.length === 0) {
        formData.delete('featured_image');
      }
      
      await ContentService.updateContent(contentId, formData);
      
      alert('Content updated successfully!');
      window.location.href = '/dashboard/content';
    } catch (error) {
      console.error('Failed to update content:', error);
      alert('Failed to update content. Please try again.');
    }
  });
</script>
